name: Deploy to ACR

permissions:
  id-token: write
  contents: read

on:
  push:
    branches: [main]

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          
        - name: 'Login via Azure CLI'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        
        - name: Build be-image
          id: build-be-image
          run: |
            docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/backend:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/backend:${{ github.sha }}

        - name: Build fe-image
          id: build-fe-image
          run: |
            docker build . --file=frontend/Dockerfile -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:${{ github.sha }}

        - uses: azure/webapps-deploy@v2
          with:
            app-name: 'microservicesfrontend'
            slot-name: 'microservicespreview'
            publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
            images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:${{ github.sha }}
  
#            client-id: ${{ secrets.AZURE_CLIENT_ID }}
#            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#        - name: Build and push image
#          id: build-image
#          run: |
#           az acr build --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/MicroservicesCaseApp:${{ github.sha }} --registry ${{ secrets.REGISTRY_LOGIN_SERVER }} --file "Dockerfile" .
#        - name: 'Deploy to Azure Container Instances'
#          uses: 'azure/aci-deploy@v1'
#          with:
#           resource-group: ${{ secrets.RESOURCE_GROUP }}
#           dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
#           image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/MicroservicesCaseApp:${{ github.sha }}
#           registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
#           registry-username: ${{ secrets.REGISTRY_USERNAME }}
#           registry-password: ${{ secrets.REGISTRY_PASSWORD }}
#           name: MicroserviceCaseApp
#           location: 'Germany West Central'